# DEV MODE CONFIGURATION FILE
# This configuration enables dev mode for easier local development
# Dev mode uses a UDP server instead of packet sniffing, removing the need for sudo

# <-- CHECKLIST -->
# 1. Check that all the boards you want to use are declared in the [vehicle] section
# 2. Set the branch you want to use for the ADJ configuration
# 3. Toggle the Fault Propagation to your needs (true/false)
# 4. Check the TCP configuration and make sure to use the needed Keep Alive settings

# Control Station general configuration
[app]
automatic_window_opening = "" # Leave blank to open no windows (<blank>, ethernet-view, control-station, both)

# Vehicle Configuration
[vehicle]
boards = ["HVSCU", "PCU", "BLCU", "LCU", "BCU", "BMSL"]

# ADJ (Architecture Description JSON) Configuration
[adj]
branch = "software" # Leave blank when using ADJ as a submodule (like this: "")
test = true     # Enable test mode

# Network Configuration
[network]
manual = true # Manual network device selection
dev_mode = true # IMPORTANT: Dev mode enabled - uses UDP server instead of packet sniffer

# Transport Configuration
[transport]
propagate_fault = false

# TCP Configuration
# These settings control how the backend reconnects to boards when connections are lost
[tcp]
backoff_min_ms = 100         # Minimum backoff duration in milliseconds
backoff_max_ms = 5000        # Maximum backoff duration in milliseconds
backoff_multiplier = 1.5     # Exponential backoff multiplier (e.g., 1.5 means each retry waits 1.5x longer)
max_retries = 0              # Maximum retries before cycling (0 = infinite retries, recommended for persistent reconnection)
connection_timeout_ms = 2000 # Timeout for the initial connection attempt
keep_alive_ms = 30000        # Keep-alive interval in milliseconds (0 to disable)

# HTTP Servers Configuration
[[server]]
enabled = true
name = "ethernet-view"

[server.cors]
enabled = true
allowed_origins = ["*"]
allowed_methods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
allowed_headers = ["Content-Type", "Authorization"]
exposed_headers = ["Content-Length"]
allow_credentials = true
max_age = 86400

[server.tls]
enabled = false
cert_file = ""
key_file = ""

[server.endpoints]
websocket = "/ws"
pod_data = "/podData"
order_data = "/orderData"
order = "/order"
logs = "/logs"
excel = "/excel"
uploads = "/uploads"
programs_boards = "/programableBoards"
blcu_info = "/blcu/info"
blcu_upload_info = "/blcu/uploadInfo"
blcu_upload = "/blcu/upload"
blcu_download = "/blcu/download"

[server.bind]
addr = "0.0.0.0"
http = 4000

# TFTP Configuration
[tftp]
block_size = 512      # TFTP block size (512 or 1468 bytes)
retries = 3           # Number of retries for TFTP operations
timeout_ms = 5000     # Timeout for TFTP operations in milliseconds
backoff_factor = 2    # Backoff factor for retries
enable_progress = true # Enable progress updates during transfers

# BLCU Configuration
[blcu]
ip = "10.10.10.5"        # BLCU IP address
download_order_id = 0     # Order ID for download operations (0 = use default)
upload_order_id = 0       # Order ID for upload operations (0 = use default)

# Logging Configuration
[logging]
level = "debug"      # Logging level (trace, debug, info, warn, error, fatal)
console = true       # Enable console output
file = "backend.log" # Log file path (empty to disable file logging)
max_size_mb = 100    # Maximum log file size in MB
max_backups = 3      # Number of backup files to keep
max_age_days = 7     # Maximum age of log files in days
